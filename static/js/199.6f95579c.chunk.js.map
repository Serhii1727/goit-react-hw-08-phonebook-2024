{"version":3,"file":"static/js/199.6f95579c.chunk.js","mappings":"4MACA,EAA+B,+BAA/B,EAAyE,2BAAzE,EAAqH,iCAArH,EAA8J,wBAA9J,EAAsN,wBAAtN,EAA8P,gCAA9P,EAAsS,wBAAtS,EAAsU,wBAAtU,EAA6W,+B,uCCsH7W,EA/GiB,WACf,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACS,UAA7BA,EAAMC,cAAcd,MACtBK,EAASQ,EAAMC,cAAcC,OAGE,aAA7BF,EAAMC,cAAcd,MACtBS,EAAYI,EAAMC,cAAcC,OAGD,SAA7BF,EAAMC,cAAcd,MACtBC,EAAQY,EAAMC,cAAcC,MAEhC,EAeMC,EAAQ,WACZf,EAAQ,IACRI,EAAS,IACTI,EAAY,GACd,EAEA,OACEQ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAUC,SAAC,cAC1BH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAmBG,SAxBzB,SAAAT,GACfA,EAAMU,iBAEN,IAAMC,EAAW,CACfxB,KAAAA,EACAI,MAAAA,EACAI,SAAAA,GAGFE,GAASe,EAAAA,EAAAA,IAAgBD,IAEzBR,GACF,EAY6DI,SAAA,EACrDC,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,OAAOR,UAAWC,EAAUC,SAAC,UAG5CC,EAAAA,EAAAA,KAAA,SACEM,SAAUf,EACVgB,KAAK,OACLC,YAAY,OACZC,GAAG,OACH9B,KAAK,OACLe,MAAOf,EACP+B,UAAW,EACXC,UAAQ,EACRd,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,QAAQR,UAAWC,EAAUC,SAAC,WAG7CC,EAAAA,EAAAA,KAAA,SACEM,SAAUf,EACVgB,KAAK,QACLC,YAAY,kBACZC,GAAG,QACH9B,KAAK,QACLe,MAAOX,EACP4B,UAAQ,EACRd,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,WAAWR,UAAWC,EAAUC,SAAC,cAGhDC,EAAAA,EAAAA,KAAA,SACEM,SAAUf,EACVgB,KAAK,WACLC,YAAY,UACZE,UAAW,EACXD,GAAG,WACH9B,KAAK,WACLe,MAAOP,EACPwB,UAAQ,EACRd,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASV,UAAWC,EAAiBC,SAAC,oBAkBvDC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAmBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAWc,IAAKC,EAAOC,IAAI,kBAInD,C","sources":["webpack://react-homework-template/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginSection\":\"Register_loginSection__myoy7\",\"loginBar\":\"Register_loginBar__FNrTe\",\"imageContainer\":\"Register_imageContainer__nKRag\",\"image\":\"Register_image__CGR0e\",\"p\":\"Register_p__uoZjM\",\"title\":\"Register_title__4r11G\",\"formContainer\":\"Register_formContainer__tooq0\",\"label\":\"Register_label__KQhFe\",\"input\":\"Register_input__d+3tu\",\"buttonSignIn\":\"Register_buttonSignIn__BA2+y\",\"buttonGoogle\":\"Register_buttonGoogle__FgCcN\",\"icon\":\"Register_icon__CdufD\",\"textButtonGoogle\":\"Register_textButtonGoogle__dXPjC\"};","// import { FcGoogle } from 'react-icons/fc';\n// import { IconContext } from 'react-icons';\nimport image from '../../services/images/ea3d219854b076d03f3eeb276c51c24bfb74d595031e15e0f1bd09a32ab4f263.jpg';\nimport css from './Register.module.css';\nimport { useDispatch } from 'react-redux';\nimport { apiRegisterUser } from '../../redux/auth/authSlice';\nimport { useState } from 'react';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChangeInput = event => {\n    if (event.currentTarget.name === 'email') {\n      setEmail(event.currentTarget.value);\n    }\n\n    if (event.currentTarget.name === 'password') {\n      setPassword(event.currentTarget.value);\n    }\n\n    if (event.currentTarget.name === 'name') {\n      setName(event.currentTarget.value);\n    }\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      name,\n      email,\n      password,\n    };\n\n    dispatch(apiRegisterUser(formData));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className={css.loginSection}>\n      <div className={css.loginBar}>\n        <h1 className={css.title}>Register</h1>\n        <form className={css.formContainer} onSubmit={onSubmit}>\n          <label htmlFor=\"name\" className={css.label}>\n            Name\n          </label>\n          <input\n            onChange={handleChangeInput}\n            type=\"text\"\n            placeholder=\"Name\"\n            id=\"name\"\n            name=\"name\"\n            value={name}\n            minLength={2}\n            required\n            className={css.input}\n          ></input>\n          <label htmlFor=\"email\" className={css.label}>\n            Email\n          </label>\n          <input\n            onChange={handleChangeInput}\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            id=\"email\"\n            name=\"email\"\n            value={email}\n            required\n            className={css.input}\n          ></input>\n          <label htmlFor=\"password\" className={css.label}>\n            Password\n          </label>\n          <input\n            onChange={handleChangeInput}\n            type=\"password\"\n            placeholder=\"*******\"\n            minLength={7}\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            className={css.input}\n          ></input>\n          <button type=\"submit\" className={css.buttonSignIn}>\n            Register\n          </button>\n          {/* <p className={css.p}>or</p>\n          <button type=\"submit\" className={css.buttonGoogle}>\n            <span className={css.icon}>\n              <IconContext.Provider\n                value={{ style: { height: '25px', width: '25px' } }}\n              >\n                <FcGoogle />\n              </IconContext.Provider>\n            </span>\n            <span className={css.textButtonGoogle}>\n              <p> Sign in with Google</p>\n            </span>\n          </button> */}\n        </form>\n      </div>\n      <div className={css.imageContainer}>\n        <img className={css.image} src={image} alt=\"phonebook\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","handleChangeInput","event","currentTarget","value","reset","_jsxs","className","css","children","_jsx","onSubmit","preventDefault","formData","apiRegisterUser","htmlFor","onChange","type","placeholder","id","minLength","required","src","image","alt"],"sourceRoot":""}