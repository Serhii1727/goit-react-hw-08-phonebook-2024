{"version":3,"file":"static/js/709.b05eaed0.chunk.js","mappings":"sNACA,GAAgB,aAAe,4BAA4B,SAAW,wBAAwB,eAAiB,8BAA8B,MAAQ,qBAAqB,EAAI,iBAAiB,MAAQ,qBAAqB,cAAgB,6BAA6B,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,aAAe,4BAA4B,KAAO,oBAAoB,iBAAmB,iC,uCCoGvc,EA5Fc,WACZ,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACS,UAA7BA,EAAMC,cAAcC,MACtBV,EAASQ,EAAMC,cAAcE,OAGE,aAA7BH,EAAMC,cAAcC,MACtBN,EAAYI,EAAMC,cAAcE,MAEpC,EAcMC,EAAQ,WACZZ,EAAS,IACTI,EAAY,GACd,EACA,OACES,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,aAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,SAAaC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,MAAUC,SAAC,WAC1BH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,cAAmBG,SApBzB,SAAAV,GACfA,EAAMW,iBAEN,IAAMC,EAAW,CACfrB,MAAAA,EACAI,SAAAA,GAGFE,GAASgB,EAAAA,EAAAA,IAAaD,IACtBR,GACF,EAU6DI,SAAA,EACrDC,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,QAAQR,UAAWC,EAAAA,MAAUC,SAAC,WAG7CC,EAAAA,EAAAA,KAAA,SACEM,SAAUhB,EACViB,KAAK,QACLC,YAAY,kBACZC,GAAG,QACHhB,KAAK,QACLC,MAAOZ,EACP4B,UAAQ,EACRb,UAAWC,EAAAA,SAEbE,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,WAAWR,UAAWC,EAAAA,MAAUC,SAAC,cAGhDC,EAAAA,EAAAA,KAAA,SACEM,SAAUhB,EACViB,KAAK,WACLC,YAAY,UACZG,UAAW,EACXF,GAAG,WACHhB,KAAK,WACLC,MAAOR,EACPwB,UAAQ,EACRb,UAAWC,EAAAA,SAEbE,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAAA,aAAkBS,KAAK,SAAQR,SAAC,eAiBrDH,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAAA,SAAaC,SAAA,CAAC,2BACHC,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CAACC,GAAG,YAAWd,SAAC,mBAGnDC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,eAAmBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,MAAWgB,IAAKC,EAAOC,IAAI,kBAInD,C","sources":["webpack://react-homework-template/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginSection\":\"Login_loginSection__N7nMg\",\"loginBar\":\"Login_loginBar__kbvib\",\"imageContainer\":\"Login_imageContainer__hN5F3\",\"image\":\"Login_image__nImvT\",\"p\":\"Login_p__hYrYq\",\"title\":\"Login_title__SJ0Uv\",\"formContainer\":\"Login_formContainer__+cTTV\",\"label\":\"Login_label__MvF1C\",\"input\":\"Login_input__6Emyd\",\"buttonSignIn\":\"Login_buttonSignIn__EgUV8\",\"buttonGoogle\":\"Login_buttonGoogle__8mVb3\",\"icon\":\"Login_icon__X2eek\",\"textButtonGoogle\":\"Login_textButtonGoogle__wV+tX\"};","// import { FcGoogle } from 'react-icons/fc';\n// import { IconContext } from 'react-icons';\nimport { NavLink } from 'react-router-dom';\nimport image from '../../services/images/ea3d219854b076d03f3eeb276c51c24bfb74d595031e15e0f1bd09a32ab4f263.jpg';\nimport css from './Login.module.css';\nimport { useDispatch } from 'react-redux';\nimport { apiLoginUser } from '../../redux/auth/authSlice';\nimport { useState } from 'react';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChangeInput = event => {\n    if (event.currentTarget.name === 'email') {\n      setEmail(event.currentTarget.value);\n    }\n\n    if (event.currentTarget.name === 'password') {\n      setPassword(event.currentTarget.value);\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      email,\n      password,\n    };\n\n    dispatch(apiLoginUser(formData));\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <div className={css.loginSection}>\n      <div className={css.loginBar}>\n        <h1 className={css.title}>Login</h1>\n        <form className={css.formContainer} onSubmit={onSubmit}>\n          <label htmlFor=\"email\" className={css.label}>\n            Email\n          </label>\n          <input\n            onChange={handleChangeInput}\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            id=\"email\"\n            name=\"email\"\n            value={email}\n            required\n            className={css.input}\n          ></input>\n          <label htmlFor=\"password\" className={css.label}>\n            Password\n          </label>\n          <input\n            onChange={handleChangeInput}\n            type=\"password\"\n            placeholder=\"*******\"\n            minLength={7}\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            className={css.input}\n          ></input>\n          <button className={css.buttonSignIn} type=\"submit\">\n            Log in\n          </button>\n          {/* <p className={css.p}>or</p> */}\n          {/* <button type=\"button\" className={css.buttonGoogle}>\n            <span className={css.icon}>\n              <IconContext.Provider\n                value={{ style: { height: '25px', width: '25px' } }}\n              >\n                <FcGoogle />\n              </IconContext.Provider>\n            </span>\n            <span className={css.textButtonGoogle}>\n              <p> Sign in with Google</p>\n            </span>\n          </button> */}\n        </form>\n        <p className={css.register}>\n          Don't have an account? <NavLink to=\"/register\">Sign up</NavLink>\n        </p>\n      </div>\n      <div className={css.imageContainer}>\n        <img className={css.image} src={image} alt=\"phonebook\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","dispatch","useDispatch","handleChangeInput","event","currentTarget","name","value","reset","_jsxs","className","css","children","_jsx","onSubmit","preventDefault","formData","apiLoginUser","htmlFor","onChange","type","placeholder","id","required","minLength","NavLink","to","src","image","alt"],"sourceRoot":""}